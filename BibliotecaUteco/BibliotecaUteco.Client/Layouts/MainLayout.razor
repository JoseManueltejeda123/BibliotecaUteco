@inherits LayoutComponentBase
@implements IDisposable
<Toaster />
<AuthorizeView>
    <NotAuthorized>
        <RedirectToIndex/>
    </NotAuthorized>
</AuthorizeView>


<div class="relative flex w-full h-screen">
    <SideBar OnSideBarExpandedChanged="(e)=> SideBarExpanded = e" SideBarExpanded="SideBarExpanded"/>
    <main class=@($"flex-1 ml-[250px] max-md:ml-[75px] {(RightBarContext.View != RightBarView.Default ? "mr-[300px] max-md:mr-[0px]" : "")}  {(!SideBarExpanded ? " !ml-[75px] " : "" )}")>
       
        <nav class="w-full z-40 sticky top-0 py-2 px-4 items-center  h-[50px] gap-3 flex justify-end bg-green-700">
            <h2 class="text-xl text-white select-none font-semibold">Biblio<span class="underline decoration-white decoration-2">Uteco</span></h2>
            <img class="size-[50px] aspect-square" src="https://akanuxt.uteco.edu.do/_nuxt/img/logo.f9c953e.svg" alt="uteco logo"/>

        </nav>
        <article class="content px-4 mt-[50px] max-w-full">
            @Body
        </article>
    </main>
    
    @if (RightBarContext.View != RightBarView.Default)
    {
        <RightBar/>
    }
</div>

<div id="blazor-error-ui" data-nosnippet>
    An unhandled error has occurred.
    <a href="." class="reload">Reload</a>
    <span class="dismiss">🗙</span>
</div>

@code{

    public bool SideBarExpanded {get; set;} = true;

    protected override void OnInitialized()
    {
        RightBarContext.OnViewChanged += StateHasChanged;
    }

    public void Dispose()
    {
        RightBarContext.OnViewChanged -= StateHasChanged;
    }


}

