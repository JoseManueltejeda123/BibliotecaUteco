
@if (DialogService.IsOpen)
{
    <Animate Animation="Animations.FadeIn">
        <div @onclick="@(DialogService.Cancel)" class="fixed inset-0 z-[99999] bg-white/70  flex justify-center items-center">
            <div class="bg-white p-6 rounded-lg  border border-neutral-200 w-[350px] flex flex-col gap-4">
                <h2 class="text-md font-semibold text-center">@DialogService.Title</h2>
                <p class="text-[13px] text-center opacity-80">@DialogService.Body</p>

                @if (DialogService.ChildContent is not null)
                {
                    <div class="mt-2">
                        @DialogService.ChildContent
                    </div>
                }

                <div class="flex justify-between items-center gap-2 mt-4">
                    <LumexButton Color="DialogService.CancelColor"
                                 @onclick="DialogService.Cancel">
                        @DialogService.CancelText
                    </LumexButton>

                    <LumexButton Color="DialogService.AcceptColor"
                                 Class="w-full"
                                 @onclick="DialogService.Accept">
                        @DialogService.AcceptText
                    </LumexButton>
                </div>
            </div>
        </div>

    </Animate>
}

@code {
    protected override void OnInitialized()
    {
        DialogService.OnDialogChanged += StateHasChanged;
    }

    public void Dispose()
    {
        DialogService.OnDialogChanged -= StateHasChanged;
    }
}